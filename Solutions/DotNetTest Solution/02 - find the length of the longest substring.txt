import java.util.HashSet;

public class LongestSubstring {
    public static int lengthOfLongestSubstring(String s) {
        int n = s.length();
        HashSet<Character> set = new HashSet<>();
        int maxLen = 0;
        int start = 0;
        int end = 0;
        
        while (end < n) {
            if (!set.contains(s.charAt(end))) {
                set.add(s.charAt(end));
                maxLen = Math.max(maxLen, end - start + 1);
                end++;
            } else {
                set.remove(s.charAt(start));
                start++;
            }
        }
        
        return maxLen;
    }

    public static void main(String[] args) {
        String s1 = "abcabcbb";
        String s2 = "bbbbb";
        String s3 = "pwwkew";
        
        System.out.println("Length of longest substring without repeating characters in " + s1 + ": " + lengthOfLongestSubstring(s1));
        System.out.println("Length of longest substring without repeating characters in " + s2 + ": " + lengthOfLongestSubstring(s2));
        System.out.println("Length of longest substring without repeating characters in " + s3 + ": " + lengthOfLongestSubstring(s3));
    }
}
